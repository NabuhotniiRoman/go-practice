#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—é–≤–∞–Ω–Ω—è –∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–º–∏ –º—ñ–≥—Ä–∞—Ü—ñ—è–º–∏
set -e

echo "üöÄ Deploying Go API with database migrations..."

# –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ PostgreSQL
echo "üì¶ Applying PostgreSQL..."
kubectl apply -f postgres.yaml

# –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ PostgreSQL –±—É–¥–µ –≥–æ—Ç–æ–≤–∏–π
echo "‚è≥ Waiting for PostgreSQL to be ready..."
kubectl wait --for=condition=ready pod -l app=postgres --timeout=300s

# –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ ConfigMap —ñ Secrets
echo "üîß Applying ConfigMap and Secrets..."
kubectl apply -f configmap.yaml

# –ó–∞–ø—É—Å–∫–∞—î–º–æ –º—ñ–≥—Ä–∞—Ü—ñ—ó
echo "üóÉÔ∏è Running database migrations..."
kubectl delete job db-migration --ignore-not-found=true
kubectl apply -f db-migration-job.yaml

# –ß–µ–∫–∞—î–º–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –º—ñ–≥—Ä–∞—Ü—ñ–π
echo "‚è≥ Waiting for migrations to complete..."
kubectl wait --for=condition=complete job/db-migration --timeout=300s

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å –º—ñ–≥—Ä–∞—Ü—ñ–π
migration_status=$(kubectl get job db-migration -o jsonpath='{.status.succeeded}')
if [ "$migration_status" != "1" ]; then
    echo "‚ùå Migration failed!"
    kubectl logs job/db-migration
    exit 1
fi

echo "‚úÖ Migrations completed successfully!"

# –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π –¥–µ–ø–ª–æ–π–º–µ–Ω—Ç
echo "üöÄ Deploying Go API..."
kubectl apply -f go-api-deployment.yaml
kubectl apply -f service.yaml

# –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ Ingress (—è–∫—â–æ —ñ—Å–Ω—É—î)
if [ -f "ingress.yaml" ]; then
    echo "üåê Applying Ingress..."
    kubectl apply -f ingress.yaml
fi

echo "‚úÖ Deployment completed successfully!"
echo ""
echo "üìä Checking deployment status..."
kubectl get pods -l app=go-api
kubectl get pods -l app=postgres
kubectl get svc
