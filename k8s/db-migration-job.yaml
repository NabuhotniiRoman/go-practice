apiVersion: batch/v1
kind: Job
metadata:
  name: db-migration
  labels:
    app: go-api
    component: migration
spec:
  backoffLimit: 3
  completions: 1
  parallelism: 1
  template:
    metadata:
      labels:
        app: go-api
        component: migration
    spec:
      restartPolicy: Never
      containers:
        - name: db-migration
          image: nabuhotnii/go-api:latest
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Running database migrations..."
              # Створюємо тимчасовий конфіг для міграції
              cat > /tmp/migration-config.hcl << 'EOF'
              server {
                environment = "production"
                log_level = "info"
              }
              
              database {
                driver = "postgres"
                host = "postgres-service"
                port = 5432
                name = "go_practice"
                user = "oidc_api_user"
                password = "oidc_secure_password_2025"
                ssl_mode = "disable"
                max_open_connections = 10
                max_idle_connections = 5
                connection_max_lifetime = "5m"
              }
              
              oidc {
                provider {
                  issuer_url = "https://accounts.google.com"
                  client_id = "dummy"
                  client_secret = "dummy"
                  redirect_url = "https://api.example.com/auth/callback"
                  post_logout_redirect_url = "https://app.example.com"
                  auth_url = "https://accounts.google.com/o/oauth2/v2/auth"
                  token_url = "https://oauth2.googleapis.com/token"
                  userinfo_url = "https://openidconnect.googleapis.com/v1/userinfo"
                  issuer = "https://accounts.google.com"
                }
                
                tokens {
                  signing_key = "dev-jwt-secret"
                  signing_method = "HS256"
                  access_token_duration = "15m"
                  refresh_token_duration = "7d"
                  id_token_duration = "1h"
                }
                
                scopes = ["openid", "profile", "email"]
              }
              
              security {
                cors {
                  allowed_origins = ["*"]
                  allowed_methods = ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
                  allowed_headers = ["*"]
                  allow_credentials = true
                  max_age = 86400
                }
                
                rate_limit {
                  enabled = true
                  requests_per_minute = 100
                  burst = 50
                }
                
                session {
                  secret = "dev-session-secret"
                  max_age = 3600
                  secure = false
                  http_only = true
                }
              }
              
              redis {
                enabled = false
                host = "localhost"
                port = 6379
                password = ""
                database = 0
                max_retries = 3
                pool_size = 10
              }
              EOF
              
              /app/api-server migrate -c /tmp/migration-config.hcl
          resources:
            requests:
              memory: "32Mi"
              cpu: "25m"
            limits:
              memory: "64Mi"
              cpu: "50m"
