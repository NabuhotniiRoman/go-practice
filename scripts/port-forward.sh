#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ port forwarding
set -e

echo "üöÄ Starting automatic port forwarding..."

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –ø—Ä–æ—Ü–µ—Å—ñ–≤ –ø—Ä–∏ –≤–∏—Ö–æ–¥—ñ
cleanup() {
    echo "üõë Stopping port forwarding..."
    pkill -f "kubectl port-forward" || true
    exit 0
}

# –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ —Å–∏–≥–Ω–∞–ª—ñ–≤
trap cleanup SIGINT SIGTERM

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É port forwarding –∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é
start_port_forward() {
    local service=$1
    local local_port=$2
    local target_port=$3
    local service_name=$4
    
    echo "üîó Starting port forwarding for $service_name ($service:$target_port -> localhost:$local_port)"
    
    while true; do
        kubectl port-forward service/$service $local_port:$target_port &
        local pid=$!
        
        # –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ –ø—Ä–æ—Ü–µ—Å –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è –∞–±–æ –≤–ø–∞–¥–µ
        sleep 5
        
        if kill -0 $pid 2>/dev/null; then
            echo "‚úÖ Port forwarding for $service_name is running (PID: $pid)"
            wait $pid
        else
            echo "‚ùå Port forwarding for $service_name failed, restarting in 5 seconds..."
            sleep 5
        fi
    done
}

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –¥–æ—Å—Ç—É–ø–Ω–∏–π –∫–ª–∞—Å—Ç–µ—Ä
if ! kubectl cluster-info >/dev/null 2>&1; then
    echo "‚ùå Kubernetes cluster is not accessible"
    exit 1
fi

echo "‚úÖ Kubernetes cluster is accessible"

# –ó–∞–ø—É—Å–∫–∞—î–º–æ port forwarding –¥–ª—è –æ–±–æ—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤ –≤ —Ñ–æ–Ω—ñ
start_port_forward "go-api-service" "8080" "8080" "Go API" &
start_port_forward "react-frontend-service" "3000" "80" "React Frontend" &

echo "üéØ Port forwarding started:"
echo "   - Go API: https://api.example.com"
echo "   - React Frontend: http://localhost:3000"
echo ""
echo "Press Ctrl+C to stop all port forwarding"

# –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ –≤—Å—ñ —Ñ–æ–Ω–æ–≤—ñ –ø—Ä–æ—Ü–µ—Å–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–∞—Ç—å—Å—è
wait
