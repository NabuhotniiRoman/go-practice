#!/bin/bash

# Dev Full Environment Setup Script
echo "üöÄ Starting full development environment..."

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —á–µ–∫–∞–Ω–Ω—è –ø–æ—Ä—Ç—É
wait_for_port() {
    local port=$1
    local service=$2
    echo "‚è≥ Waiting for $service on port $port..."
    while ! nc -z localhost $port > /dev/null 2>&1; do
        sleep 1
    done
    echo "‚úÖ $service is ready on port $port"
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑—É–ø–∏–Ω–∫–∏ –≤—Å—ñ—Ö port-forward –ø—Ä–æ—Ü–µ—Å—ñ–≤
cleanup() {
    echo -e "\n${RED}üõë Stopping all port forwarding...${NC}"
    pkill -f "kubectl port-forward" || true
    # –í–∏–¥–∞–ª—è—î–º–æ –∑–∞–ø–∏—Å –∑ /etc/hosts —è–∫—â–æ –≤—ñ–Ω –±—É–≤ –¥–æ–¥–∞–Ω–∏–π
    if grep -q "127.0.0.1.*api.example.com" /etc/hosts 2>/dev/null; then
        echo "üßπ Removing api.example.com from /etc/hosts..."
        sudo sed -i '/127.0.0.1.*api.example.com/d' /etc/hosts || true
    fi
    echo -e "${GREEN}‚úÖ Cleanup completed${NC}"
    exit 0
}

# –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ —Å–∏–≥–Ω–∞–ª—ñ–≤
trap cleanup SIGINT SIGTERM

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤—Å–µ –ø—Ä–∞—Ü—é—î –≤ k8s
echo "üìä Checking Kubernetes status..."
kubectl get pods -l app=go-api --no-headers | head -1
kubectl get pods -l app=react-frontend --no-headers | head -1

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π netcat
if ! command -v nc &> /dev/null; then
    echo "‚ö†Ô∏è  netcat not found, installing..."
    sudo apt-get update && sudo apt-get install -y netcat-openbsd
fi

# –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π –¥–æ–º–µ–Ω api.example.com
echo "üåê Setting up local domain api.example.com..."
if ! grep -q "127.0.0.1.*api.example.com" /etc/hosts 2>/dev/null; then
    echo "Adding api.example.com to /etc/hosts..."
    echo "127.0.0.1 api.example.com" | sudo tee -a /etc/hosts > /dev/null
    echo "‚úÖ Domain api.example.com added to /etc/hosts"
else
    echo "‚úÖ Domain api.example.com already configured"
fi

echo -e "\n${BLUE}üöÄ Starting port forwarding...${NC}"

# –ó–∞–ø—É—Å–∫–∞—î–º–æ port-forwarding –¥–ª—è API –≤ —Ñ–æ–Ω–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ
echo "üîó Starting API port forwarding (8080 -> go-api-service:8080)..."
kubectl port-forward svc/go-api-service 8080:8080 > /dev/null 2>&1 &
API_PID=$!

# –ó–∞–ø—É—Å–∫–∞—î–º–æ port-forwarding –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É –≤ —Ñ–æ–Ω–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ  
echo "üîó Starting Frontend port forwarding (3000 -> react-frontend-service:80)..."
kubectl port-forward svc/react-frontend-service 3000:80 > /dev/null 2>&1 &
FRONTEND_PID=$!

# –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ —Å–µ—Ä–≤—ñ—Å–∏ –±—É–¥—É—Ç—å –≥–æ—Ç–æ–≤—ñ
wait_for_port 8080 "API"
wait_for_port 3000 "Frontend"

echo -e "\n${GREEN}‚úÖ Development environment is ready!${NC}"
echo -e "\nüìã ${BLUE}Access URLs:${NC}"
echo -e "   üîß API Server:     ${YELLOW}http://api.example.com:8080${NC}"
echo -e "   üåê Frontend:       ${YELLOW}http://localhost:3000${NC}"
echo -e "   üìö API Docs:       ${YELLOW}http://api.example.com:8080/docs${NC}"
echo -e "   üîç Health Check:   ${YELLOW}http://api.example.com:8080/health${NC}"

echo -e "\nüí° ${BLUE}Tips:${NC}"
echo "   - Frontend will automatically connect to http://api.example.com:8080"
echo "   - API is accessible both locally and from frontend"
echo "   - Press Ctrl+C to stop all services"

# –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –≤ –±—Ä–∞—É–∑–µ—Ä—ñ
echo -e "\nüåê Opening frontend in browser..."
sleep 2
google-chrome http://localhost:3000 2>/dev/null || chromium-browser http://localhost:3000 2>/dev/null || xdg-open http://localhost:3000 2>/dev/null || echo "‚ùå Could not open browser automatically"

echo -e "\n${GREEN}üéâ Ready to develop! Press Ctrl+C to stop.${NC}"

# –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑—É–ø–∏–Ω–∏—Ç—å
wait
