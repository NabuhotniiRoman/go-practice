name: Build and Push Go API Docker Image

on:
  push:
    branches:
      - master  # –í–∏–∫–æ–Ω—É—î—Ç—å—Å—è –ø—Ä–∏ –ø—É—à—ñ –≤ –≥—ñ–ª–∫—É master

permissions:
  contents: write  # –î–æ–∑–≤–æ–ª—è—î push –∑–º—ñ–Ω

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: docker build -t nabuhotnii/go-api:${{ github.sha }} -t nabuhotnii/go-api:latest -f ./Dockerfile .

    - name: Push Docker image
      run: |
        docker push nabuhotnii/go-api:${{ github.sha }}
        docker push nabuhotnii/go-api:latest


    - name: Install yq
      run: sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 && sudo chmod +x /usr/local/bin/yq

    - name: Set timestamp
      id: set-timestamp
      run: echo "timestamp=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

    - name: Update deployment image and annotation
      run: |
        # –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–≥ –æ–±—Ä–∞–∑—É
        yq -i '.spec.template.spec.containers[0].image = "nabuhotnii/go-api:${{ github.sha }}"' k8s/go-api-deployment.yaml
        # –î–æ–¥–∞—î–º–æ/–æ–Ω–æ–≤–ª—é—î–º–æ –∞–Ω–æ—Ç–∞—Ü—ñ—é (–∑–∞–≤–∂–¥–∏ –æ–Ω–æ–≤–ª—é—î, –Ω–µ —Å—Ç–≤–æ—Ä—é—î –¥—É–±–ª—å)
        yq -i 'with(.spec.template.metadata; .annotations //= {} | .annotations."kubectl.kubernetes.io/restartedAt" = env(TIMESTAMP))' k8s/go-api-deployment.yaml
      env:
        TIMESTAMP: ${{ steps.set-timestamp.outputs.timestamp }}
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add k8s/go-api-deployment.yaml
        git commit -m "Update Go API image to ${{ github.sha }}" || exit 0
        git push

    - name: Success message
      run: |
        echo "‚úÖ Go API Docker images pushed successfully!"
        echo "üì¶ Image: nabuhotnii/go-api:${{ github.sha }}"
        echo "üîÑ ArgoCD will sync and restart pods automatically!"


